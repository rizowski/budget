# type BillHistory {
#   paymentDate: Date!
#   payment: Int!
# }

type Bill {
  id: ID!
  name: String!
  amount: Int!
  startDate: Date!
  repeats: Frequency!
  # history: [BillHistory]!
}

input CreateBillInput {
  id: ID
  name: String!
  amount: Int! # Maybe be a string?
  startDate: Date!
  repeats: Frequency!
}

input UpdateBillInput {
  id: ID
  name: String
  amount: Int # Maybe be a string?
  startDate: Date
  repeats: Frequency
}

input AddBillHistoryInput {
  paymentDate: Date!
  payment: Int!
}

input QueryBillInput {
  id: ID
}

extend type Query {
  getBills(input: QueryBillInput) : [ Bill ]!
}

extend type Mutation {
  createBill(input: CreateBillInput) : Bill!
  updateBill(id: ID! input: UpdateBillInput): Bill!
  addToBillHistory(id: ID! input: AddBillHistoryInput): Bill!
}
